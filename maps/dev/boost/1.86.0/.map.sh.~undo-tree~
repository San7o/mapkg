(undo-tree-save-format-version . 1)
"78751fc1441804ca67b53748bd1d2786b50c9ad0"
[nil nil nil nil (26448 12315 594852 986000) 0 nil]
([nil nil ((22 . 28) (#("2" 0 1 (face font-lock-string-face fontified t)) . -22) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -23) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (#("2" 0 1 (face font-lock-string-face fontified t)) . -24) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("7" 0 1 (face font-lock-string-face fontified t)) . -25) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -26) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -27) (undo-tree-id11 . -1) 28 (t 26448 12131 0 0)) nil (26448 12315 594848 397000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 88) (t 26448 12315 0 0)) nil (26448 12348 20987 745000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20986 507000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20985 404000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20984 183000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20983 208000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20982 364000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20981 407000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20980 416000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20979 610000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20978 770000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20977 999000) 0 nil])
([nil nil ((#("l" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20977 88000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . 88)) nil (26448 12348 20974 833000) 0 nil])
([nil nil ((94 . 96) (88 . 94)) nil (26448 12348 20970 105000) 0 nil])
([nil nil ((#("fastfetch" 0 9 (face font-lock-string-face fontified t)) . 104) (undo-tree-id12 . -8) (undo-tree-id13 . -8) (undo-tree-id14 . -8) (undo-tree-id15 . -8) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -8) (undo-tree-id19 . -8) (undo-tree-id20 . -8) (undo-tree-id21 . -9) 112 (t 26448 12348 0 0)) nil (26448 12352 864204 495000) 0 nil])
([nil nil ((104 . 109)) nil (26448 12352 864184 871000) 0 nil])
([nil nil ((131 . 134) (129 . 131) (#("a" 0 1 (face font-lock-string-face fontified t)) . -129) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -130) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -131) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -132) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -133) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -134) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -135) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -136) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -137) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 138 (129 . 138) (#("c" 0 1 (face font-lock-string-face fontified t)) . -129) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -130) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -131) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -132) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -133) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 134 (t 26448 12352 0 0)) nil (26448 12451 551776 369000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . 449)) nil (26448 12451 551759 349000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id58 . -1) (undo-tree-id59 . -1)) nil (26448 12451 551758 720000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id56 . -1) (undo-tree-id57 . -1)) nil (26448 12451 551757 171000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id54 . -1) (undo-tree-id55 . -1)) nil (26448 12451 551755 711000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id52 . -1) (undo-tree-id53 . -1)) nil (26448 12451 551754 114000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id50 . -1) (undo-tree-id51 . -1)) nil (26448 12451 551752 677000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id48 . -1) (undo-tree-id49 . -1)) nil (26448 12451 551751 0) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id46 . -1) (undo-tree-id47 . -1)) nil (26448 12451 551749 492000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id44 . -1) (undo-tree-id45 . -1)) nil (26448 12451 551748 128000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (26448 12451 551746 460000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) nil (26448 12451 551745 23000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id38 . -1) (undo-tree-id39 . -1)) nil (26448 12451 551741 430000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id36 . -1) (undo-tree-id37 . -1)) nil (26448 12451 551739 751000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id34 . -1) (undo-tree-id35 . -1)) nil (26448 12451 551737 984000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (26448 12451 551736 437000) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id30 . -1) (undo-tree-id31 . -1)) nil (26448 12451 551734 801000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . 449) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) nil (26448 12451 551732 853000) 0 nil])
([nil nil ((482 . 488) (473 . 481) (#("#" 0 1 (face font-lock-string-face syntax-table (3) fontified t)) . -473) (undo-tree-id22 . -1) 474 (467 . 474) (462 . 467) (#("a" 0 1 (face font-lock-string-face fontified t)) . -462) (undo-tree-id23 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -463) (undo-tree-id24 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -464) (undo-tree-id25 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -465) (undo-tree-id26 . -1) 466 (457 . 466) (#("." 0 1 (face font-lock-string-face fontified t)) . -457) (undo-tree-id27 . -1) 458 (449 . 458)) nil (26448 12451 551729 519000) 0 nil])
([nil nil ((497 . 506) (496 . 497)) nil (26448 12451 551711 985000) 0 nil])
([nil nil ((#("        elif command -v wget >/dev/null 2>&1; then
                wget -q -O \"$MAPKG_DIR\"/build/\"$NAME\"-\"$VERSION\".tar.gz \"$URL\"
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 46 (fontified t) 46 50 (face font-lock-keyword-face fontified t) 50 78 (fontified t) 78 90 (face font-lock-string-face fontified t) 90 97 (fontified t) 97 104 (face font-lock-string-face fontified t) 104 105 (fontified t) 105 115 (face font-lock-string-face fontified t) 115 123 (fontified t) 123 129 (face font-lock-string-face fontified t) 129 130 (fontified t)) . 744) (undo-tree-id88 . -50) (undo-tree-id89 . -129) (undo-tree-id90 . -128) (undo-tree-id91 . -128) (undo-tree-id92 . -50) 794 (t 26448 12451 0 0)) nil (26448 12470 862622 235000) 0 nil])
([nil nil ((nil rear-nonsticky nil 620 . 621) (#("
" 0 1 (fontified nil)) . -742) (612 . 743) 611) nil (26448 12470 862603 587000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-keyword-face fontified t)) . 621) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (t 26448 12470 0 0)) nil (26448 12475 863036 157000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 621) (undo-tree-id104 . -1) (undo-tree-id105 . -1)) nil (26448 12475 863034 116000) 0 nil])
([nil nil ((795 . 796) (789 . 795) 749) nil (26448 12475 863030 142000) 0 nil])
([nil nil ((#("
	    " 0 1 (fontified t) 1 6 (fontified nil)) . 789) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -6) (undo-tree-id97 . -6) (undo-tree-id98 . -1) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (#("e" 0 1 (fontified t)) . 795) (undo-tree-id103 . -1)) nil (26448 12475 863027 597000) 0 nil])
([nil nil ((749 . 751)) nil (26448 12475 863007 457000) 0 nil])
([nil nil ((743 . 754) (740 . 743) (t 26448 12475 0 0) 673) nil (26448 13509 253375 422000) 0 nil])
([nil nil ((743 . 754) (#("$" 0 1 (fontified t)) . -743) (undo-tree-id112 . -1) (#(" " 0 1 (fontified t)) . -744) (undo-tree-id113 . -1) 745 (743 . 745) (741 . 743) (741 . 742) 753) nil (26448 13509 253374 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 853 . 854) (nil fontified nil 768 . 854) (768 . 854) (#("l" 0 1 (rear-nonsticky t fontified t)) . -768) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 769 (nil rear-nonsticky nil 768 . 769) (nil fontified nil 768 . 769) (768 . 769)) nil (26448 13509 253371 64000) 0 nil])
([nil nil ((780 . 787) (769 . 779) (768 . 770) (#("$" 0 1 (fontified t)) . -768) (undo-tree-id108 . -1) (#("$" 0 1 (face font-lock-variable-name-face fontified t)) . -769) (undo-tree-id109 . -1) 770 (768 . 770) (768 . 770)) nil (26448 13509 253367 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 822 . 823) (nil fontified nil 787 . 823) (787 . 823) 786) nil (26448 13509 253351 858000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1046 . 1047) (#("
" 0 1 (fontified nil)) . -1201) (1044 . 1202) 963 (t 26448 13509 0 0)) nil (26448 13523 710557 993000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1341 . 1342) (#("
" 0 1 (fontified nil)) . -1496) (1339 . 1497) 1276) nil (26448 13523 710548 231000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 1342)) nil (26448 13523 710547 423000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t)) . 1342)) nil (26448 13523 710546 685000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1342)) nil (26448 13523 710546 94000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 1342)) nil (26448 13523 710545 482000) 0 nil])
([nil nil ((1342 . 1347)) nil (26448 13523 710544 879000) 0 nil])
([nil nil ((1352 . 1353) (#("O" 0 1 (fontified t)) . -1352) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) 1353) nil (26448 13523 710543 524000) 0 nil])
([nil nil ((1058 . 1060) (#("=" 0 1 (fontified t)) . -1058) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 1059 (1053 . 1059) (#("q" 0 1 (fontified t)) . -1053) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#(" " 0 1 (fontified t)) . -1054) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("-" 0 1 (fontified t)) . -1055) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("O" 0 1 (fontified t)) . -1056) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 1057) nil (26448 13523 710418 78000) 0 nil])
([nil nil ((#("        mkdir -p build
        cd build || return 1
        cmake ..
        cmake --build . --target fastfetch -j \"$(nproc)\"
" 0 31 (fontified t) 31 33 (face font-lock-builtin-face fontified t) 33 43 (fontified t) 43 49 (face font-lock-keyword-face fontified t) 49 115 (fontified t) 115 125 (face font-lock-string-face fontified t) 125 126 (fontified t)) . 2226) (undo-tree-id356 . -125) (undo-tree-id357 . -87) (undo-tree-id358 . -21) (undo-tree-id359 . -87) (undo-tree-id360 . -87) (undo-tree-id361 . -69) (undo-tree-id362 . -87) (undo-tree-id363 . -126) 2313 (t 26448 13523 0 0)) nil (26448 13666 877516 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2353 . 2354) (2228 . 2354) (2227 . 2228) (#("	" 0 1 (fontified nil)) . 2226) (2226 . 2227) (#(" " 0 1 (fontified nil)) . 2226) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (2227 . 2228) (2226 . 2227) (2227 . 2228) (#("	" 0 1 (fontified nil)) . 2226) (undo-tree-id355 . -1) (2227 . 2228) (2225 . 2227) 2183) nil (26448 13666 877512 89000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 2225) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -2) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("
" 0 1 (fontified nil)) . 2227) (undo-tree-id288 . 1) (2226 . 2227) (#("	" 0 1 (fontified t)) . 2227) (#(" " 0 1 (fontified nil)) . 2226) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (#("
" 0 1 (fontified nil)) . 2227) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (2226 . 2227) (#("	" 0 1 (fontified nil)) . 2226) (2226 . 2227) (#("	" 0 1 (fontified nil)) . 2227) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("        mkdir -p build
        cd build || return 1
        cmake ..
        cmake --build . --target fastfetch -j \"$(nproc)\"
" 0 8 (fontified t display "…") 8 22 (fontified t) 22 23 (fontified t display #("^J" 0 2 (face escape-glyph))) 23 31 (fontified t) 31 33 (face font-lock-builtin-face fontified t) 33 43 (fontified t) 43 49 (face font-lock-keyword-face fontified t) 49 51 (fontified t) 51 52 (fontified t display #("^J" 0 2 (face escape-glyph))) 52 68 (fontified t) 68 69 (fontified t display #("^J" 0 2 (face escape-glyph))) 69 115 (fontified nil) 115 125 (face font-lock-string-face fontified nil) 125 126 (rear-nonsticky nil fontified nil display #("^J" 0 2 (face escape-glyph)))) . 2228) (undo-tree-id340 . -126) (undo-tree-id341 . -126) (undo-tree-id342 . -126) (undo-tree-id343 . -126) (undo-tree-id344 . -126) (undo-tree-id345 . -126) (undo-tree-id346 . -126) (undo-tree-id347 . -126) (undo-tree-id348 . -126) (undo-tree-id349 . -126) (undo-tree-id350 . -126) (undo-tree-id351 . -126) (undo-tree-id352 . -126) (nil rear-nonsticky t 2353 . 2354)) nil (26448 13666 877506 482000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2589 . 2590) (nil fontified nil 2586 . 2590) (nil fontified nil 2585 . 2586) (nil fontified nil 2528 . 2585) (nil fontified nil 2527 . 2528) (nil fontified nil 2464 . 2527) (nil fontified nil 2463 . 2464) (nil fontified nil 2455 . 2463) (nil fontified nil 2454 . 2455) (nil fontified nil 2435 . 2454) (2435 . 2590) (2434 . 2435) (#("	" 0 1 (fontified nil)) . 2433) (undo-tree-id262 . -1) (2432 . 2435) (2426 . 2428) (#("
" 0 1 (fontified t display #("^J" 0 2 (face escape-glyph)))) . -2426) (undo-tree-id263 . -1) 2427 (2373 . 2379) (#("          " 0 1 (face font-lock-string-face fontified nil) 1 10 (fontified nil)) . 2373) (2372 . 2373) (#("
" 0 1 (fontified t display #("^J" 0 2 (face escape-glyph)))) . -2372) (undo-tree-id264 . -1) 2373 (2313 . 2315) (#("     " 0 5 (fontified nil)) . 2313) (2312 . 2313) (2311 . 2312) (#(")" 0 1 (syntax-table (1) syntax-multiline t fontified t)) . -2311) (undo-tree-id265 . -1) (#("
" 0 1 (fontified t display #("^J" 0 2 (face escape-glyph)))) . -2312) (undo-tree-id266 . -1) (#(" " 0 1 (fontified t)) . -2313) (undo-tree-id267 . -1) 2314 (2302 . 2307) (#("   " 0 3 (syntax-multiline t fontified nil)) . 2302) (2301 . 2302) (#("
" 0 1 (syntax-multiline t fontified t display #("^J" 0 2 (face escape-glyph)))) . -2301) (undo-tree-id268 . -1) 2302 (nil rear-nonsticky nil 2436 . 2437) (nil fontified nil 2433 . 2437) (nil fontified nil 2432 . 2433) (nil fontified nil 2375 . 2432) (nil fontified nil 2374 . 2375) (nil fontified nil 2311 . 2374) (nil fontified nil 2310 . 2311) (nil fontified nil 2302 . 2310) (nil fontified nil 2301 . 2302) (nil fontified nil 2282 . 2301) (2282 . 2437) (2280 . 2282) (nil rear-nonsticky nil 2279 . 2280) (nil fontified nil 2228 . 2280) (2228 . 2280) (2227 . 2228) (2228 . 2229) (#("	" 0 1 (fontified nil)) . 2227) (undo-tree-id269 . -1) (2227 . 2229) (#("	" 0 1 (fontified nil)) . 2226) (undo-tree-id270 . -1) (2227 . 2228) (2225 . 2227) 2183) nil (26448 13666 877467 504000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 2225) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (#("
" 0 1 (fontified nil)) . 2227) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (2226 . 2227) (#("	
" 0 1 (fontified nil) 1 2 (fontified nil)) . 2227) (undo-tree-id218 . 1) (undo-tree-id219 . -1) (2227 . 2228) (#("	" 0 1 (fontified t)) . 2228) (#("	" 0 1 (fontified nil)) . 2227) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (#("patch -Np1 -i ../boost-1.86.0-upstream_fixes-1.patch" 0 51 (fontified nil) 51 52 (rear-nonsticky nil fontified nil)) . 2228) (undo-tree-id229 . -52) (undo-tree-id230 . -52) (undo-tree-id231 . -52) (undo-tree-id232 . -52) (undo-tree-id233 . -52) (undo-tree-id234 . -52) (undo-tree-id235 . -52) (nil rear-nonsticky t 2279 . 2280) (#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 2280) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (#("case $(uname -m) in
   i?86)
      sed -e \"s/defined(__MINGW32__)/& || defined(__i386__)/\" \\
          -i ./libs/stacktrace/src/exception_headers.h ;;
esac" 0 4 (face font-lock-keyword-face fontified nil) 4 17 (fontified nil) 17 19 (syntax-multiline t face font-lock-keyword-face fontified nil) 19 20 (syntax-multiline t fontified nil display #("^J" 0 2 (face escape-glyph))) 20 23 (syntax-multiline t fontified nil) 23 27 (syntax-multiline t fontified nil) 27 28 (syntax-table (1) syntax-multiline t fontified nil) 28 29 (fontified nil display #("^J" 0 2 (face escape-glyph))) 29 30 (fontified nil) 30 35 (fontified nil) 35 42 (fontified nil) 42 90 (face font-lock-string-face fontified nil) 90 91 (fontified nil) 91 92 (face sh-escaped-newline fontified nil) 92 93 (fontified nil display #("^J" 0 2 (face escape-glyph))) 93 94 (face font-lock-string-face fontified nil) 94 103 (fontified nil) 103 150 (fontified nil) 150 151 (fontified nil display #("^J" 0 2 (face escape-glyph))) 151 154 (face font-lock-keyword-face fontified nil) 154 155 (face font-lock-keyword-face fontified nil rear-nonsticky nil)) . 2282) (undo-tree-id243 . -155) (undo-tree-id244 . -155) (undo-tree-id245 . -155) (undo-tree-id246 . -155) (undo-tree-id247 . -155) (nil rear-nonsticky t 2436 . 2437) (2301 . 2302) (#("
" 0 1 (syntax-multiline t fontified t)) . 2301) (2302 . 2305) (#("	    " 0 5 (syntax-multiline t fontified nil)) . 2302) (2311 . 2314) (#(")" 0 1 (syntax-table (1) syntax-multiline t fontified nil)) . 2311) (#("
" 0 1 (fontified t)) . 2312) (2313 . 2318) (#("		" 0 2 (fontified nil)) . 2313) (2372 . 2373) (#("
" 0 1 (fontified t)) . 2372) (2373 . 2383) (#("		    " 0 6 (fontified nil)) . 2373) (2426 . 2427) (#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 2426) (#("
	
" 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil)) . 2432) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (2433 . 2434) (#("	" 0 1 (fontified nil)) . 2434) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("case $(uname -m) in
   i?86)
      sed -e \"s/defined(__MINGW32__)/& || defined(__i386__)/\" \\
          -i ./libs/stacktrace/src/exception_headers.h ;;
esac" 0 4 (face font-lock-keyword-face fontified nil) 4 17 (fontified nil) 17 19 (face font-lock-keyword-face syntax-multiline t fontified nil) 19 20 (syntax-multiline t fontified nil display #("^J" 0 2 (face escape-glyph))) 20 27 (syntax-multiline t fontified nil) 27 28 (syntax-table (1) syntax-multiline t fontified nil) 28 29 (fontified nil display #("^J" 0 2 (face escape-glyph))) 29 42 (fontified nil) 42 90 (face font-lock-string-face fontified nil) 90 91 (fontified nil) 91 92 (face sh-escaped-newline fontified nil) 92 93 (fontified nil display #("^J" 0 2 (face escape-glyph))) 93 150 (fontified nil) 150 151 (fontified nil display #("^J" 0 2 (face escape-glyph))) 151 154 (face font-lock-keyword-face fontified nil) 154 155 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 2435) (undo-tree-id258 . -154) (undo-tree-id259 . -155) (undo-tree-id260 . -154) (undo-tree-id261 . -154) (nil fontified t 2454 . 2455) (nil fontified t 2463 . 2464) (nil fontified t 2527 . 2528) (nil fontified t 2585 . 2586) (nil rear-nonsticky t 2589 . 2590)) nil (26448 13666 877455 294000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2589 . 2590) (nil fontified nil 2585 . 2586) (nil fontified nil 2527 . 2528) (nil fontified nil 2463 . 2464) (nil fontified nil 2454 . 2455) (2434 . 2590) (#("	" 0 1 (fontified nil)) . 2433) (2432 . 2435) (2426 . 2428) (#("
" 0 1 (fontified nil display #("^J" 0 2 (face escape-glyph)))) . 2426) (2373 . 2379) (#("          " 0 1 (face font-lock-string-face fontified nil) 1 10 (fontified nil)) . 2373) (2372 . 2373) (#("
" 0 1 (fontified nil display #("^J" 0 2 (face escape-glyph)))) . 2372) (2313 . 2315) (#("     " 0 5 (fontified nil)) . 2313) (2311 . 2313) (#(")
 " 0 1 (syntax-table (1) syntax-multiline t fontified nil) 1 2 (fontified nil display #("^J" 0 2 (face escape-glyph))) 2 3 (fontified nil)) . 2311) (2302 . 2307) (#("   " 0 3 (syntax-multiline t fontified nil)) . 2302) (2301 . 2302) (#("
" 0 1 (syntax-multiline t fontified nil display #("^J" 0 2 (face escape-glyph)))) . 2301) (nil rear-nonsticky nil 2436 . 2437) (2280 . 2437) (nil rear-nonsticky nil 2279 . 2280) (2227 . 2280) (2228 . 2229) (#("	" 0 1 (fontified nil)) . 2227) (2227 . 2229) (#("	" 0 1 (fontified nil)) . 2226) (2225 . 2228)) nil (26448 13666 877247 548000) 0 nil])
([nil nil ((#("	case $(uname -m) in
   i?86)
      sed -e \"s/defined(__MINGW32__)/& || defined(__i386__)/\" \\
" 0 1 (fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 18 (fontified t) 18 20 (face font-lock-keyword-face syntax-multiline t fontified t) 20 21 (syntax-multiline t fontified t display #("^J" 0 2 (face escape-glyph))) 21 28 (syntax-multiline t fontified t) 28 29 (syntax-table (1) syntax-multiline t fontified t) 29 30 (fontified t display #("^J" 0 2 (face escape-glyph))) 30 43 (fontified t) 43 91 (face font-lock-string-face fontified t) 91 92 (fontified t) 92 93 (face sh-escaped-newline fontified t) 93 94 (fontified t display #("^J" 0 2 (face escape-glyph)))) . 2434) (undo-tree-id194 . -93) (undo-tree-id195 . -80) (undo-tree-id196 . -1) (undo-tree-id197 . -80) (undo-tree-id198 . -80) (undo-tree-id199 . -1) 2514) nil (26448 13666 877244 332000) 0 nil])
([nil nil ((#("          -i ./libs/stacktrace/src/exception_headers.h ;;
esac
" 0 57 (fontified t) 57 58 (fontified t display #("^J" 0 2 (face escape-glyph))) 58 61 (face font-lock-keyword-face fontified t) 61 62 (face font-lock-keyword-face fontified t rear-nonsticky t) 62 63 (fontified t)) . 2434) (undo-tree-id188 . 1) (undo-tree-id189 . -62) (undo-tree-id190 . 63) (undo-tree-id191 . -62) (undo-tree-id192 . -50) (undo-tree-id193 . -61) 2484) nil (26448 13666 877240 46000) 0 nil])
([nil nil ((2502 . 2507) (2501 . 2503) (#("P" 0 1 (face font-lock-variable-name-face fontified t)) . -2501) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (#("{" 0 1 (fontified t)) . -2502) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) 2503 (2500 . 2503) (#("<" 0 1 (fontified t)) . -2500) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (#("N" 0 1 (fontified t)) . -2501) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#(">" 0 1 (fontified t)) . -2502) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 2503 (2485 . 2487) (#(" " 0 1 (fontified t)) . -2485) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("&" 0 1 (fontified t)) . -2486) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("&" 0 1 (fontified t)) . -2487) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("
" 0 1 (fontified t display #("^J" 0 2 (face escape-glyph)))) . -2488) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 2489 (nil rear-nonsticky nil 2532 . 2533) (nil fontified nil 2489 . 2533) (nil fontified nil 2488 . 2489) (nil fontified nil 2435 . 2488) (2435 . 2533) (2434 . 2435) (#("	" 0 1 (fontified nil)) . 2433) (2433 . 2434) (2433 . 2434)) nil (26448 13666 877231 681000) 0 nil])
([nil nil ((2507 . 2508) (#("_" 0 1 (fontified t)) . -2507) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) 2508 (2507 . 2508) (#("}" 0 1 (fontified t)) . -2507) (undo-tree-id368 . 1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) 2508 (2501 . 2502) (#("{" 0 1 (fontified t)) . -2501) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) 2502 (t 26448 13666 0 0)) nil (26448 13672 998688 443000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3202 . 3203) (nil fontified nil 3159 . 3203) (nil fontified nil 3158 . 3159) (nil fontified nil 3105 . 3158) (3105 . 3203) (#("" 0 1 (fontified t)) . -3105) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) 3106 (3105 . 3106) (3103 . 3105) (t 26448 13673 0 0) 3045) nil (26448 13733 49454 267000) 0 nil])
([nil nil ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 3103) (undo-tree-id388 . -2) (undo-tree-id389 . -2) (undo-tree-id390 . -2) (undo-tree-id391 . -2) (undo-tree-id392 . -2) (undo-tree-id393 . -2) (undo-tree-id394 . -2) (#("" 0 1 (fontified nil)) . 3105) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (3105 . 3106) (#("./bootstrap.sh --prefix=/usr --with-python=python3 &&
./b2 stage -j<N> threading=multi link=shared" 0 53 (fontified nil) 53 54 (fontified nil display #("^J" 0 2 (face escape-glyph))) 54 71 (fontified nil) 71 80 (face font-lock-variable-name-face fontified nil) 80 87 (fontified nil) 87 91 (face font-lock-variable-name-face fontified nil) 91 97 (fontified nil) 97 98 (rear-nonsticky nil fontified nil)) . 3105) (undo-tree-id397 . -97) (undo-tree-id398 . -98) (undo-tree-id399 . -97) (undo-tree-id400 . -54) (undo-tree-id401 . -97) (nil fontified t 3158 . 3159) (nil rear-nonsticky t 3202 . 3203)) nil (26448 13733 49450 676000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3144 . 3145) (nil fontified nil 3105 . 3145) (3105 . 3145) (3103 . 3105) (t 26448 13673 0 0) 3033) nil (26448 13733 49440 264000) 0 nil])
([nil nil ((#("        cp \"$MAPKG_DIR\"/build/\"$NAME\"-\"$VERSION\"/build/\"$NAME\" \"$MAPKG_DIR\"/bin/\"$NAME\"
" 0 11 (fontified t) 11 16 (face font-lock-string-face fontified t) 16 23 (face font-lock-string-face fontified t) 23 30 (fontified t) 30 37 (face font-lock-string-face fontified t) 37 38 (fontified t) 38 48 (face font-lock-string-face fontified t) 48 55 (fontified t) 55 62 (face font-lock-string-face fontified t) 62 63 (fontified t) 63 75 (face font-lock-string-face fontified t) 75 80 (fontified t) 80 83 (face font-lock-string-face fontified t) 83 87 (face font-lock-string-face fontified t) 87 88 (fontified t)) . 3016) (undo-tree-id377 . -87) (undo-tree-id378 . -87) (undo-tree-id379 . -29) (undo-tree-id380 . -87) (undo-tree-id381 . -87) (undo-tree-id382 . -47) (undo-tree-id383 . -17) (undo-tree-id384 . -47) (undo-tree-id385 . -47) (undo-tree-id386 . -47) (undo-tree-id387 . -88) 3063) nil (26448 13733 49435 809000) 0 nil])
([nil nil ((2467 . 2470) (#("B" 0 1 (face font-lock-variable-name-face fontified t)) . -2467) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (#("U" 0 1 (face font-lock-variable-name-face fontified t)) . -2468) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("I" 0 1 (face font-lock-variable-name-face fontified t)) . -2469) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (#("L" 0 1 (face font-lock-variable-name-face fontified t)) . -2470) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#("D" 0 1 (face font-lock-variable-name-face fontified t)) . -2471) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) 2472 (2460 . 2472) (#("u" 0 1 (fontified t)) . -2460) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("s" 0 1 (fontified t)) . -2461) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (#("r" 0 1 (fontified t)) . -2462) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 2463 (t 26448 13733 0 0)) nil (26448 13794 230110 550000) 0 nil])
([nil nil ((#("https://www.linuxfromscratch.org/patches/blfs/12.2/boost-1.86.0-upstream_fixes-1.patch
" 0 85 (fontified t) 85 86 (rear-nonsticky t fontified t) 86 87 (fontified t)) . 825) (undo-tree-id452 . -86) (undo-tree-id453 . -86) (undo-tree-id454 . -86) (undo-tree-id455 . -86) (undo-tree-id456 . -86) 911 (t 26448 13794 0 0)) nil (26448 13907 799979 375000) 0 nil])
([nil nil ((526 . 528) (#("'" 0 1 (face font-lock-string-face fontified t)) . -526) (undo-tree-id447 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -527) (undo-tree-id448 . -1) 528 (518 . 528) (#("T" 0 1 (fontified t)) . -518) (undo-tree-id449 . -1) (#("H" 0 1 (fontified t)) . -519) (undo-tree-id450 . -1) (#("C" 0 1 (fontified t)) . -520) (undo-tree-id451 . -1) 521 (516 . 521) (514 . 516) 401) nil (26448 13907 799975 424000) 0 nil])
([nil nil ((nil rear-nonsticky nil 613 . 614) (nil fontified nil 527 . 614) (527 . 614) 526) nil (26448 13907 799972 152000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-string-face rear-nonsticky t fontified t)) . -613) (undo-tree-id446 . -1) 614) nil (26448 13907 799971 280000) 0 nil])
([nil nil ((930 . 934) (925 . 930) (924 . 925) (922 . 925)) nil (26448 13907 799970 277000) 0 nil])
([nil nil ((#("  https://www.linuxfromscratch.org/patches/blfs/12.2/boost-1.86.0-upstream_fixes-1.patch
" 0 2 (fontified t) 2 87 (fontified t) 87 88 (fontified t rear-nonsticky t) 88 89 (fontified t)) . 1142) (undo-tree-id444 . -88) (undo-tree-id445 . -83) 1225) nil (26448 13907 799969 353000) 0 nil])
([nil nil ((1143 . 1153) (1141 . 1144)) nil (26448 13907 799967 848000) 0 nil])
([nil nil ((1147 . 1149) (#("H" 0 1 (face font-lock-string-face fontified t)) . -1147) (undo-tree-id442 . -1) (#("C" 0 1 (face font-lock-string-face fontified t)) . -1148) (undo-tree-id443 . -1) 1149) nil (26448 13907 799966 555000) 0 nil])
([nil nil ((#("  https://www.linuxfromscratch.org/patches/blfs/12.2/boost-1.86.0-upstream_fixes-1.patch
" 0 2 (fontified t) 2 87 (fontified t) 87 88 (fontified t rear-nonsticky t) 88 89 (fontified t)) . 1362) (undo-tree-id438 . -88) (undo-tree-id439 . -87) (undo-tree-id440 . -87) (undo-tree-id441 . -89) 1449) nil (26448 13907 799963 856000) 0 nil])
([nil nil ((1363 . 1373) (1361 . 1364)) nil (26448 13907 799947 118000) 0 nil])
([nil nil ((#("		# LFS patch
" 0 2 (fontified t) 2 4 (face font-lock-comment-delimiter-face fontified t) 4 13 (face font-lock-comment-face fontified t) 13 14 (face font-lock-comment-face fontified t)) . 841) (undo-tree-id476 . -13) (undo-tree-id477 . -13) (undo-tree-id478 . -12) 853 (t 26448 13907 0 0)) nil (26448 13921 298277 528000) 0 nil])
([nil nil ((516 . 527) (514 . 516) 425) nil (26448 13921 298275 120000) 0 nil])
([nil nil ((#("	# LFS patch
" 0 1 (fontified t) 1 3 (face font-lock-comment-delimiter-face fontified t) 3 12 (face font-lock-comment-face fontified t) 12 13 (face font-lock-comment-face fontified t)) . 515) (undo-tree-id457 . 1) (undo-tree-id458 . -12) (undo-tree-id459 . -11) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -4) (undo-tree-id465 . -4) (undo-tree-id466 . -9) (undo-tree-id467 . -9) (undo-tree-id468 . -12) (undo-tree-id469 . -12) (undo-tree-id470 . -11) (undo-tree-id471 . -11) (undo-tree-id472 . -11) (undo-tree-id473 . -11) (undo-tree-id474 . -11) (undo-tree-id475 . -13) 526) nil (26448 13921 298270 992000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2890 . 2891) (#("
" 0 1 (fontified nil)) . -2943) (2882 . 2944) 2881 (t 26448 13921 0 0)) nil (26448 14041 283861 856000) 0 nil])
([nil nil ((3157 . 3164) (3152 . 3156) (#("+" 0 1 (face font-lock-string-face fontified t)) . -3152) (undo-tree-id486 . -1) 3153 (3147 . 3153) (#("P" 0 1 (face font-lock-string-face fontified t)) . -3147) (undo-tree-id487 . -1) (#("A" 0 1 (face font-lock-string-face fontified t)) . -3148) (undo-tree-id488 . -1) 3149 (3146 . 3149) (3143 . 3147) (#("r" 0 1 (fontified t)) . -3143) (undo-tree-id489 . -1) (#("f" 0 1 (fontified t)) . -3144) (undo-tree-id490 . -1) (#(" " 0 1 (fontified t)) . -3145) (undo-tree-id491 . -1) (#("$" 0 1 (fontified t)) . -3146) (undo-tree-id492 . -1) 3147 (3143 . 3147) (#("f" 0 1 (fontified t)) . -3143) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 3144 (3139 . 3144) (3137 . 3139) 3087) nil (26448 14041 283859 394000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3199 . 3200) (nil fontified nil 3164 . 3200) (3164 . 3200) 3163) nil (26448 14041 283853 243000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -3199) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) 3200) nil (26448 14041 283849 527000) 0 nil])
([nil nil ((#("        if [ ! -f \"$MAPKG_DIR\"/build/\"$NAME\"-\"$VERSION\"/build/\"$NAME\" ]; then
                echo \"Error: $NAME does not exist\" >&2
                exit 1
        fi
" 0 8 (fontified t) 8 10 (face font-lock-keyword-face fontified t) 10 13 (fontified t) 13 14 (face font-lock-negation-char-face fontified t) 14 18 (fontified t) 18 30 (face font-lock-string-face fontified t) 30 37 (fontified t) 37 44 (face font-lock-string-face fontified t) 44 45 (fontified t) 45 47 (face font-lock-string-face fontified t) 47 55 (face font-lock-string-face fontified t) 55 62 (fontified t) 62 69 (face font-lock-string-face fontified t) 69 73 (fontified t) 73 77 (face font-lock-keyword-face fontified t) 77 78 (fontified t) 78 94 (fontified t) 94 98 (face font-lock-builtin-face fontified t) 98 99 (fontified t) 99 128 (face font-lock-string-face fontified t) 128 137 (fontified t) 137 147 (fontified t) 147 149 (fontified t) 149 153 (face font-lock-keyword-face fontified t) 153 156 (fontified t) 156 161 (fontified t) 161 163 (fontified t) 163 164 (fontified t) 164 166 (face font-lock-keyword-face fontified t) 166 167 (fontified t)) . 2623) (undo-tree-id495 . -166) (undo-tree-id496 . -166) (undo-tree-id497 . -66) (undo-tree-id498 . -166) (undo-tree-id499 . -66) (undo-tree-id500 . -166) (undo-tree-id501 . -66) (undo-tree-id502 . -66) (undo-tree-id503 . -66) (undo-tree-id504 . -66) (undo-tree-id505 . -66) (undo-tree-id506 . -66) (undo-tree-id507 . -156) (undo-tree-id508 . -166) (undo-tree-id509 . -167) 2789 (t 26448 14041 0 0)) nil (26448 14594 796446 688000) 0 nil])
([nil nil ((2722 . 2727) (#("1" 0 1 (fontified t)) . -2722) (undo-tree-id555 . -1) 2723 (2722 . 2723) (#("+" 0 1 (fontified t)) . -2722) (undo-tree-id556 . -1) 2723 (2722 . 2723) (#("|" 0 1 (fontified t)) . -2722) (undo-tree-id557 . -1) 2723 (2722 . 2723) (#("1" 0 1 (fontified t)) . -2722) (undo-tree-id558 . -1) 2723 (2721 . 2723) (2717 . 2722) (2715 . 2717) (t 26448 14594 0 0) 2705) nil (26448 21182 584202 964000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2736 . 2737) (#("
" 0 1 (fontified nil)) . -2895) (2728 . 2896) 2727) nil (26448 21182 584199 319000) 0 nil])
([nil nil ((#("
        if [ ! -f \"$MAPKG_DIR\"/build/\"$NAME\"-\"$VERSION\"/build/\"$NAME\" ]; then
                echo \"Error: $NAME does not exist\" >&2
                exit 1
        fi
" 0 1 (fontified t) 1 8 (fontified nil) 8 9 (rear-nonsticky nil fontified nil) 9 11 (face font-lock-keyword-face fontified nil) 11 14 (fontified nil) 14 15 (face font-lock-negation-char-face fontified nil) 15 19 (fontified nil) 19 31 (face font-lock-string-face fontified nil) 31 38 (fontified nil) 38 45 (face font-lock-string-face fontified nil) 45 46 (fontified nil) 46 48 (face font-lock-string-face fontified nil) 48 56 (face font-lock-string-face fontified nil) 56 63 (fontified nil) 63 70 (face font-lock-string-face fontified nil) 70 74 (fontified nil) 74 78 (face font-lock-keyword-face fontified nil) 78 79 (fontified nil) 79 95 (fontified t) 95 99 (face font-lock-builtin-face fontified t) 99 100 (fontified t) 100 129 (face font-lock-string-face fontified t) 129 138 (fontified t) 138 148 (fontified t) 148 150 (fontified t) 150 154 (face font-lock-keyword-face fontified t) 154 157 (fontified t) 157 162 (fontified nil) 162 164 (fontified nil) 164 165 (fontified nil) 165 167 (face font-lock-keyword-face fontified nil) 167 168 (fontified nil)) . 2728) (undo-tree-id550 . -1) (undo-tree-id551 . -167) (undo-tree-id552 . -9) (undo-tree-id553 . -9) (undo-tree-id554 . -9) (2895 . 2896) (nil rear-nonsticky t 2736 . 2737)) nil (26448 21182 584197 890000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2764 . 2765) (nil fontified nil 2727 . 2765) (2727 . 2765) 2726) nil (26448 21182 584194 981000) 0 nil])
([nil nil ((2775 . 2777) (#(" " 0 1 (fontified t)) . -2775) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (#(" " 0 1 (fontified t)) . -2776) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#(" " 0 1 (fontified t)) . -2777) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#(" " 0 1 (fontified t)) . -2778) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) 2779 (2774 . 2779) (#("	    " 0 5 (fontified nil)) . 2773) (undo-tree-id547 . -5) (undo-tree-id548 . -5) (undo-tree-id549 . -5) (2772 . 2779) (2766 . 2772)) nil (26448 21182 584192 931000) 0 nil])
([nil nil ((2778 . 2782) (2773 . 2778)) nil (26448 21182 584182 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2788 . 2789) (#("
" 0 1 (fontified nil)) . -2860) (2772 . 2861) 2724) nil (26448 21182 584181 523000) 0 nil])
([nil nil ((#("	        
" 0 9 (fontified t) 9 10 (fontified t)) . 2861) (undo-tree-id520 . 1) (undo-tree-id521 . -9) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -10) 2869) nil (26448 21182 584179 905000) 0 nil])
([nil current ((2802 . 2810) (2801 . 2802) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2801) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) 2802 (#(" " 0 1 (face font-lock-string-face fontified t)) . 2802) (#("d" 0 1 (face font-lock-string-face fontified t)) . 2802) (#("l" 0 1 (face font-lock-string-face fontified t)) . 2802) (#("i" 0 1 (face font-lock-string-face fontified t)) . 2802) (#("u" 0 1 (face font-lock-string-face fontified t)) . 2802) (#("b" 0 1 (face font-lock-string-face fontified t)) . 2802)) nil (26448 21182 584169 113000) 0 nil])
nil
