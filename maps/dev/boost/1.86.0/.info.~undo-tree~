(undo-tree-save-format-version . 1)
"10afd019b06a391d56500cf303e9fac0becaa17c"
[nil nil nil nil (26448 12300 307813 694000) 0 nil]
([nil nil ((10 . 15) ("f" . -10) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) ("a" . -11) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) ("s" . -12) (undo-tree-id199 . -1) (undo-tree-id200 . -1) ("t" . -13) (undo-tree-id201 . -1) (undo-tree-id202 . -1) ("f" . -14) (undo-tree-id203 . -1) (undo-tree-id204 . -1) ("e" . -15) (undo-tree-id205 . -1) (undo-tree-id206 . -1) ("t" . -16) (undo-tree-id207 . -1) (undo-tree-id208 . -1) ("c" . -17) (undo-tree-id209 . -1) (undo-tree-id210 . -1) 18 ("h" . -18) (undo-tree-id211 . -1) 19 (t 26448 12131 0 0)) nil (26448 12300 307811 715000) 0 nil])
([nil nil ((25 . 31) ("2" . -25) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) ("." . -26) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) ("2" . -27) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) ("7" . -28) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) ("." . -29) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) ("1" . -30) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 31) nil (26448 12300 307799 948000) 0 nil])
([nil nil (("A" . -46) (undo-tree-id125 . -1) (" " . -47) (undo-tree-id126 . -1) ("m" . -48) (undo-tree-id127 . -1) ("a" . -49) (undo-tree-id128 . -1) ("i" . -50) (undo-tree-id129 . -1) ("n" . -51) (undo-tree-id130 . -1) ("t" . -52) (undo-tree-id131 . -1) ("a" . -53) (undo-tree-id132 . -1) ("i" . -54) (undo-tree-id133 . -1) 55 ("n" . -55) (undo-tree-id134 . -1) ("e" . -56) (undo-tree-id135 . -1) ("d" . -57) (undo-tree-id136 . -1) ("," . -58) (undo-tree-id137 . -1) (" " . -59) (undo-tree-id138 . -1) ("f" . -60) (undo-tree-id139 . -1) ("e" . -61) (undo-tree-id140 . -1) ("a" . -62) (undo-tree-id141 . -1) ("t" . -63) (undo-tree-id142 . -1) ("u" . -64) (undo-tree-id143 . -1) ("r" . -65) (undo-tree-id144 . -1) ("e" . -66) (undo-tree-id145 . -1) ("-" . -67) (undo-tree-id146 . -1) ("r" . -68) (undo-tree-id147 . -1) ("i" . -69) (undo-tree-id148 . -1) ("c" . -70) (undo-tree-id149 . -1) ("h" . -71) (undo-tree-id150 . -1) (" " . -72) (undo-tree-id151 . -1) ("a" . -73) (undo-tree-id152 . -1) ("n" . -74) (undo-tree-id153 . -1) ("d" . -75) (undo-tree-id154 . -1) 76) nil (26448 12300 307782 332000) 0 nil])
([nil nil (("performance oriented, neofetch like system
information tool.
" . 47) (undo-tree-id112 . -56) (undo-tree-id113 . -13) (undo-tree-id114 . -13) (undo-tree-id115 . -56) (undo-tree-id116 . -13) (undo-tree-id117 . -56) (undo-tree-id118 . -13) (undo-tree-id119 . -13) (undo-tree-id120 . -56) (undo-tree-id121 . -56) (undo-tree-id122 . -56) (undo-tree-id123 . -61) (undo-tree-id124 . -60) 103) nil (26448 12300 307765 428000) 0 nil])
([nil nil ((nil rear-nonsticky nil 106 . 107) (46 . 107)) nil (26448 12300 307759 82000) 0 nil])
([nil nil ((#("performance oriented, neofetch like system
information tool.
" 42 43 (display #("^J" 0 2 (face escape-glyph))) 60 61 (rear-nonsticky nil display #("^J" 0 2 (face escape-glyph)))) . 46) (undo-tree-id108 . -61) (undo-tree-id109 . -61) (undo-tree-id110 . -61) (undo-tree-id111 . -61) (nil rear-nonsticky t 106 . 107)) nil (26448 12300 307758 275000) 0 nil])
([nil nil ((nil rear-nonsticky nil 266 . 267) (46 . 267)) nil (26448 12300 307756 70000) 0 nil])
([nil nil ((146 . 148) (" " . -146) (undo-tree-id82 . -1) ("l" . -147) (undo-tree-id83 . -1) 148 (#("t" 0 1 (display "…")) . -256) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#(" " 0 1 (display "…")) . -257) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("t" 0 1 (display "…")) . -258) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("e" 0 1 (display "…")) . -259) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("s" 0 1 (display "…")) . -260) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("t" 0 1 (display "…")) . -261) (undo-tree-id94 . -1) (undo-tree-id95 . -1) ("
" . -262) (undo-tree-id96 . -1) ("
" . -263) (undo-tree-id97 . -1) 264 (262 . 264) (#("i" 0 1 (display "…")) . -262) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("n" 0 1 (display "…")) . -263) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("g" 0 1 (display "…")) . -264) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (#("." 0 1 (display "…")) . -265) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#(" " 0 1 (rear-nonsticky t display "…")) . -266) (undo-tree-id106 . -1) (undo-tree-id107 . -1) 267) nil (26448 12300 307753 618000) 0 nil])
([nil nil ((263 . 266) ("g" . -263) (undo-tree-id31 . -1) 264 (255 . 264) (234 . 255) (231 . 234) ("g" . -231) (undo-tree-id32 . -1) (undo-tree-id33 . -1) ("u" . -232) (undo-tree-id34 . -1) (undo-tree-id35 . -1) ("l" . -233) (undo-tree-id36 . -1) (undo-tree-id37 . -1) ("a" . -234) (undo-tree-id38 . -1) (undo-tree-id39 . -1) 235 ("r" . -235) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (" " . -236) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("e" 0 1 (display "…")) . -237) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("x" 0 1 (display "…")) . -238) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("p" 0 1 (display "…")) . -239) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("r" 0 1 (display "…")) . -240) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("e" 0 1 (display "…")) . -241) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("s" 0 1 (display "…")) . -242) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("s" 0 1 (display "…")) . -243) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("i" 0 1 (display "…")) . -244) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("o" 0 1 (display "…")) . -245) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("n" 0 1 (display "…")) . -246) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("s" 0 1 (display "…")) . -247) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#(" " 0 1 (display "…")) . -248) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("a" 0 1 (display "…")) . -249) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("n" 0 1 (display "…")) . -250) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("d" 0 1 (display "…")) . -251) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (display "…")) . -252) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("u" 0 1 (display "…")) . -253) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("n" 0 1 (display "…")) . -254) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("i" 0 1 (display "…")) . -255) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 256) nil (26448 12300 307737 13000) 0 nil])
([nil nil ((" " . -45) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (display "…")) . -46) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 47) nil (26448 12300 307622 185000) 0 nil])
([nil nil ((264 . 265) 88) nil (26448 12300 307612 986000) 0 nil])
([nil nil (("
" . 264) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1)) nil (26448 12300 307611 888000) 0 nil])
([nil nil ((87 . 88) (" " . -87) (undo-tree-id10 . -1) 88) nil (26448 12300 307609 948000) 0 nil])
([nil nil ((144 . 145) (" " . -144) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 145) nil (26448 12300 307607 912000) 0 nil])
([nil current ((192 . 193) (" " . -192) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 193) nil (26448 12300 307602 500000) 0 nil])
nil
